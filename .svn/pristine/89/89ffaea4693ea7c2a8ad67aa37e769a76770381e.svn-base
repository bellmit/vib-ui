import {Component, OnInit, ViewChild} from '@angular/core';
import {ActivatedRoute, Router} from "@angular/router";
import {Location} from '@angular/common';
import {Utils} from "../../../../share/utils";
import {DataService} from "../../../_service/data.service";
import {InvestmentService} from '../../../_service/api/investment.service';
import {isNullOrUndefined} from 'util';
import {TemplateFlipBookComponent} from '../../../_template/template-flip-book/template-flip-book.component';
import {Modal} from "../../../_share/modal-dialog/modal-dialog.component"
import {UserService} from 'app/kiatnakin/_service/user.service';

@Component({
  selector: 'suitability',
  templateUrl: './suitability.component.html',
  styleUrls: ['./suitability.component.sass', '../../../_template/template-flip-book/template-flip-book.component.sass']
})
export class SuitabilityComponent implements OnInit {

  @ViewChild('flipBook')flipBook: TemplateFlipBookComponent;
  public imgPart: string = "./assets/kiatnakin/image/";
  public currentCustomerSuitScore;
  public summaySuitScore = {
    riskTitle: "",
    assetAllocation: {
      bankDeposit: "0", //เงินฝาก,ตราสารหนี้
      governmentInstrument: "0", //ตราสารภาครัฏ
      privateInstrument: "0", //ตราสารภาคเอกชน
      equityInstrument: "0", //ตราสารทุน
      alternativeFund: "0" //การลงทุนทางเลือก
    }
  }
  public suitQuestion
  public answer = {}
  public currentPageIndex = 0;
  public isShowCloseButton: boolean = true;
  public turningSectionName: string = null;
  private savingBook = null;
  private isClosed = false;

  constructor(private router: Router, private location: Location, private dataService: DataService, private investmentService: InvestmentService, private userService: UserService) {
    this.suitQuestion = dataService.suitQuestion;
    if (isNullOrUndefined(this.suitQuestion)) {
      router.navigate(["kk", "termMutualFund"])
    }

    this.currentCustomerSuitScore = userService.getUser().suitScore

  }

  ngOnInit() {
    this.getSummaySuit()
  }

  public closeBook() {
    this.setShowCloseButton(false)
    this.isClosed = true;

    this
      .savingBook
      .turn("page", 2)
      .turn('stop')
      .turn("page", 1);
  }

  public onClickClose() {
    this.closeBook();
    setTimeout(() => {
      this
        .savingBook
        .fadeOut();
      this
        .location
        .back();
    }, 800);
  }

  private updateCurrentPage(index: number) {
    this.currentPageIndex = index;
  }

  public onFlipInit(flipObject) {
    this.savingBook = flipObject;
  }

  public onStart($event) {}

  public onTurning($page) {
    this.updateCurrentPage($page.index);

    if (this.currentPageIndex < 1) {
      //this.setShowCloseButton(false);
    }
  }

  public onTurned($page) {
    this.setShowCloseButton(($page.index > 1)
      ? true
      : false);

    if ($page.index === 1 && !this.isClosed) {
      if (this.savingBook) {
        const that = this;
        setTimeout(function () {
          that
            .location
            .back();
        }, 500);
      }
    }
  }

  public onEnd($page) {
    this.setShowCloseButton($page.index !== 1)
  }

  private setShowCloseButton(bool: boolean) {
    //this.isShowCloseButton = bool;
  }

  onClickBack() {
    this
      .location
      .back()
  }

  onClickAcceptTodoSuit() {
    $("#suit_expired_container, #suit_summary_container").hide()
    $("#flipBook").show()

  }

  onClickAccept() {
    this.router.navigate(["kk", "investment"]);
  }

  didDisplaySummay() {
    this.getSummaySuit()
    $("#suit_expired_container, #flipBook").hide()
    $("#suit_summary_container").show()

  }

  getSummaySuit() {
    if (!isNullOrUndefined(this.currentCustomerSuitScore)) {
      const suitLevel = this.currentCustomerSuitScore.CUST_SUIT_LEVEL

      switch (suitLevel) {
        case "1":
          this.summaySuitScore.riskTitle = "เสี่ยงต่ำ"

          this.summaySuitScore.assetAllocation.bankDeposit = "> 60%"
          this.summaySuitScore.assetAllocation.governmentInstrument = "> 60%"
          this.summaySuitScore.assetAllocation.privateInstrument = "< 20%"
          this.summaySuitScore.assetAllocation.equityInstrument = "< 10%"
          this.summaySuitScore.assetAllocation.alternativeFund = "< 5%"

          break;
        case "2":
          this.summaySuitScore.riskTitle = "เสี่ยงปานกลาง ค่อนข้างต่ำ"

          this.summaySuitScore.assetAllocation.bankDeposit = "< 20%"
          this.summaySuitScore.assetAllocation.governmentInstrument = "< 70%"
          this.summaySuitScore.assetAllocation.privateInstrument = "< 70%"
          this.summaySuitScore.assetAllocation.equityInstrument = "< 20%"
          this.summaySuitScore.assetAllocation.alternativeFund = "< 10%"

          break;
        case "3":
          this.summaySuitScore.riskTitle = "เสี่ยงปานกลาง ค่อนข้างสูง"

          this.summaySuitScore.assetAllocation.bankDeposit = "< 10%"
          this.summaySuitScore.assetAllocation.governmentInstrument = "< 60%"
          this.summaySuitScore.assetAllocation.privateInstrument = "< 60%"
          this.summaySuitScore.assetAllocation.equityInstrument = "< 30%"
          this.summaySuitScore.assetAllocation.alternativeFund = "< 10%"

          break;
        case "4":
          this.summaySuitScore.riskTitle = "เสี่ยงสูง"

          this.summaySuitScore.assetAllocation.bankDeposit = "< 10%"
          this.summaySuitScore.assetAllocation.governmentInstrument = "< 40%"
          this.summaySuitScore.assetAllocation.privateInstrument = "< 40%"
          this.summaySuitScore.assetAllocation.equityInstrument = "< 40%"
          this.summaySuitScore.assetAllocation.alternativeFund = "< 20%"

          break;
        case "5":
          this.summaySuitScore.riskTitle = "เสี่ยงมาก"

          this.summaySuitScore.assetAllocation.bankDeposit = "< 5%"
          this.summaySuitScore.assetAllocation.governmentInstrument = "< 30%"
          this.summaySuitScore.assetAllocation.privateInstrument = "< 30%"
          this.summaySuitScore.assetAllocation.equityInstrument = "< 60%"
          this.summaySuitScore.assetAllocation.alternativeFund = "< 30%"

          break;
        default:
          break;
      }
    }
  }

  onClickSubmitAnswer() {

    const answerId = []
    const totalQuestion = $("input[type=hidden]").length
    const answer = {}

    //Get raw answer data from input
    $("input[id^='answer']:checked").each((index, item) => {
      console.log($(item).val(), $(item).attr('id'))
      const data = $(item)
        .val()
        .split('|')

      if (isNullOrUndefined(answer[data[0]])) {
        answer[data[0] + ""] = [data[1]]
      } else {
        answer[data[0] + ""].push(data[1])
      }

    })

    //Procress rawdata into parameter format
    for (const key in answer) {
      const cust_select_answer = []

      answer[key].forEach(element => {
        cust_select_answer.push({"answer_id": element})
      });

      const answObj = {
        "quest_id": key,
        "cust_select_answer": cust_select_answer
      }
      answerId.push(answObj)
    }

    if (totalQuestion === answerId.length) {
      Modal.showProgress()
      this
        .investmentService
        .submitSuitAnswer(answerId)
        .subscribe(res => {
          this.dataService.isAcceptedTermMutualFund = true;
          this
            .userService
            .getUser()
            .updateSuitScore(res.data.SUIT_SCORE)
          this.currentCustomerSuitScore = res.data.SUIT_SCORE

          this.didDisplaySummay()
        }, error => {
          Modal.showAlert(error.responseStatus.responseMessage)
        })

    } else {
      Modal.showAlert("กรุณาตอบคำถามให้ครบถ้วน")
    }
  }
}